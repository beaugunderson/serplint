# cyberdyne subcurrency contract

data owner
data last_tx(from, to, amount, tx_id)
data user_balances[2**160]

def init():
    self.owner = msg.sender

def balance(addr):
    return(self.user_balances[addr])

def send(recipient, amount):
    from = msg.sender
    from_balance = self.user_balances[from]
    if from_balance >= amount and amount > 0:
        self.user_balances[from] -= amount
        self.user_balances[recipient] += amount

        self.last_tx.from = from
        self.last_tx.to = recipient
        self.last_tx.amount = amount
        self.last_tx.tx_id += 1
        return(1)
    return(0)

# Admin can issue at will
def issue(recipient, amount):
    if msg.sender == self.owner:
        self.user_balances[recipient] += amount

# Change admin
# Set admin to 0 to disable administration
def change_ownership(new_owner):
    if msg.sender == self.owner:
        self.owner = new_owner

# Fetch last transaction
def last_tx():
    return([self.last_tx.from, self.last_tx.to, self.last_tx.amount, self.last_tx.tx_id]:arr)
